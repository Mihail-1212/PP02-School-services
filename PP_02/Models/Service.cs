//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PP_02.Models
{
    using PP_02.Utils;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.IO;

    public partial class Service
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Service()
        {
            this.ClientService = new HashSet<ClientService>();
            this.ServicePhoto = new HashSet<ServicePhoto>();
        }
    
        public int ID { get; set; }
        public string Title { get; set; }
        public decimal Cost { get; set; }
        public int DurationInSeconds { get; set; }
        public string Description { get; set; }

        private Nullable<double> _discount;

        public Nullable<double> Discount
        {
            get
            {
                return this._discount ?? 0;
            }
            set => this._discount = value ?? 0;
        }
        public string MainImagePath { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClientService> ClientService { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ServicePhoto> ServicePhoto { get; set; }

        public String GetFullPhoto
        {
            get
            {
                String folderName = $"{Constants.ServiceImgFolder}\\";
                String filePath = $"{folderName}{this.MainImagePath}";
                if (File.Exists(filePath))
                {
                    return filePath;
                }
                return $"{folderName}{Constants.Service404Img}";
            }
        }

        public decimal DiscountCost
        {
            get
            {
                return Convert.ToDecimal(Discount ?? 0) * Cost;
            }
        }

        public decimal TotalCost
        {
            get
            {
                return Cost - DiscountCost;
            }
        }

        public double DurationInMinutes
        {
            get
            {
                return this.DurationInSeconds / 60.0;
            }
        }

        public override string ToString()
        {
            return $"{Title} - {DurationInMinutes} минут";
        }

    }
}
