//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PP_02.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Runtime.CompilerServices;

    public partial class ClientService : INotifyPropertyChanged
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public ClientService()
        {
            this.DocumentByService = new HashSet<DocumentByService>();
            this.ProductSale = new HashSet<ProductSale>();
        }
    
        public int ID { get; set; }
        public int ClientID { get; set; }
        public int ServiceID { get; set; }
        public System.DateTime StartTime { get; set; }
        public string Comment { get; set; }
    
        public virtual Client Client { get; set; }
        public virtual Service Service { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DocumentByService> DocumentByService { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ProductSale> ProductSale { get; set; }

        public Client GetClient
        {
            get
            {
                return Client;
            }
            set
            {
                Client = value;
                OnPropertyChanged();
                OnPropertyChanged("EndDate");
            }
        }
        public Service GetService
        {
            get
            {
                return Service;
            }
            set
            {
                Service = value;
                OnPropertyChanged();
                OnPropertyChanged("EndDate");
            }
        }

        public DateTime Date
        {
            get
            {
                return StartTime;
            }
            set
            {
                var time = StartTime.TimeOfDay;
                StartTime = value.Date.Add(time);
                OnPropertyChanged("EndDate");
            }
        }

        public DateTime Time
        {
            get
            {
                return StartTime;
            }
            set
            {
                var date = StartTime.Date;
                StartTime = date.Add(value.TimeOfDay);
                OnPropertyChanged("EndDate");
            }
        }

        public DateTime EndDate
        {
            get
            {
                return StartTime.AddSeconds(Service.DurationInSeconds);
            }
            set { }
        }

        public TimeSpan DateGone
        {
            get
            {
                return StartTime.Subtract(DateTime.Now);
            }
        }

        public bool DateGoneClose
        {
            get
            {
                return DateGone <= new TimeSpan(1, 0, 0);
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged([CallerMemberName] string pop = "")
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(pop));
        }
    }
}
